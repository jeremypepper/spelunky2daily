{"version":3,"sources":["../aws/utils.js","DayHistogram.js","api.js","Day.js","Player.js","Leaderboards.jsx","reportWebVitals.js","index.js"],"names":["DateTime","require","regexInvalidCharacters","RegExp","LevelDefintion","value","world","sublevel","worldName","this","module","exports","parseDate","dateText","fromFormat","zone","valueOf","getLevelDefinition","levelNumber","getPlayerName","playerName","replace","getLevelButGroupOcean","playerDayData","level","getLevel","Histogram","props","dayData","worldNumbers","_","countBy","data","maxLevel","max","keys","map","number","Number","parseInt","i","options","chart","type","plotOptions","column","colorByPoint","series","minPointLength","colors","title","text","credits","enabled","legend","yAxis","xAxis","min","tickPositions","labels","formatter","levelDefinition","toString","crosshair","name","tooltip","x","y","Chart","highcharts","Highcharts","baseUrl","window","location","hostname","fetchPath","path","fetch","DayTable","classes","makeStyles","table","minWidth","useStyles","filterCount","take","tableRows","player","levelData","TableRow","TableCell","href","platform","percentile","toFixed","id","TableContainer","component","Paper","Table","className","size","TableHead","TableBody","Day","useState","setFilterCount","latestDate","lastDayJSON","getFormattedDayDelta","formattedDay","delta","nextDate","fromMillis","plus","days","nextDay","toUTC","toFormat","includes","dates","doesDayHaveData","setDayData","day","useEffect","then","response","json","previousDay","getFormattedPreviousDay","getFormattedNextDay","previousDayElement","nextDayElement","onClick","Player","playerData","setPlayerData","percentilesByDate","setPercentilesByDate","d","newPercentilesByDate","createRow","label","dataByDay","summaryRows","rankSummary","percentileSummary","median","dayRows","scoreData","dataDay","date","score","runframes","rank","createDayRow","chartData","reverse","p25Series","p50Series","p75Series","p80Series","p90Series","p95Series","p99Series","forEach","dataForDate","push","headerFormat","pointFormat","dateFormat","Date","color","dashStyle","Leaderboards","scores","tenDayLevelsReached","Math","pow","totalScore","sum","sortBy","rows","index","scoreDays","dayScore","scoreDay","style","whiteSpace","width","colSpan","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","a","urlParams","URLSearchParams","search","get","app","ReactDOM","render","StrictMode","document","getElementById","getDateAndGo"],"mappings":"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","file":"static/js/main.ef6a3218.chunk.js","sourcesContent":["const {DateTime} = require(\"luxon\");\n\nfunction parseDate(dateText) {\n  const date = DateTime.fromFormat(dateText, \"yyyy-MM-dd\", {zone: 'utc'}).valueOf()\n  return date;\n}\n\nconst regexInvalidCharacters = new RegExp(\"[^A-Za-z0-9\\\\-_]\", \"g\")\nfunction getPlayerName(playerName) {\n  if (playerName) {\n    return playerName.replace(regexInvalidCharacters, '__');\n  }\n  return '';\n}\n\nclass LevelDefintion {\n  constructor(value, world, sublevel, worldName) {\n    this.value = value;\n    this.world = world;\n    this.sublevel = sublevel;\n    this.worldName = worldName;\n  }\n\n  toString() {\n    if (this.world ===0 && this.sublevel === 0) {\n      return \"\"\n    } else {\n      return `${this.world}-${this.sublevel}`\n    }\n  }\n}\n\nfunction getLevelDefinition(levelNumber) {\n  if (levelNumber == null) {\n    return new LevelDefintion(0, 0, 0, \"\");\n  } else if (levelNumber <= 4) {\n    return new LevelDefintion(levelNumber, 1, levelNumber, \"dwelling\");\n    // return {\n    //   world: 1,\n    //   sublevel: levelNumber,\n    //   worldName: \"dwelling\"\n    // }\n  } else if (levelNumber <= 8) {\n    // volcana/jungle\n    return new LevelDefintion(levelNumber, 2,levelNumber - 4, \"volcana/jungle\");\n  } else if (levelNumber === 9) {\n    // olmec\n    return new LevelDefintion(levelNumber,\n      3,\n      1,\n      \"olmec\"\n    );\n  } else if (levelNumber <= 13) {\n    return new LevelDefintion(levelNumber,\n      4,\n      levelNumber - 9,\n      \"tidepool/temple\");\n  } else if (levelNumber <= 14) {\n    // ice caves\n    return new LevelDefintion(levelNumber,\n      5,\n      1,\n      \"icecaves\"\n    );\n  } else if (levelNumber <= 18) {\n    // disco babylon\n    return new LevelDefintion(levelNumber,\n      6,\n      levelNumber - 14,\n      \"neobabylon\"\n    );\n  } else if (levelNumber <= 22) {\n    return new LevelDefintion(levelNumber,\n      7,\n      levelNumber - 18,\n      \"sunkencity\"\n    );\n  } else {\n    // cosmic ocean\n    return new LevelDefintion(levelNumber,\n      7,\n      levelNumber - 18,\n      \"cosmic ocean\"\n    );\n  }\n}\n\nmodule.exports =  {\n  parseDate,\n  getLevelDefinition,\n  getPlayerName,\n}\n","import _ from \"lodash\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport React from \"react\";\nimport {getLevelDefinition} from \"./utils\";\n\nconst getLevel = (playerDayData) => playerDayData.level;\nfunction getLevelButGroupOcean(playerDayData) {\n  const level = getLevel(playerDayData);\n  return level > 23 ? 23 : level;\n}\n\nfunction getWorldNumberBuckets(dayData) {\n  return _.countBy(dayData, getLevelButGroupOcean);\n}\n\nexport default function Histogram(props) {\n  if (!props.dayData) {\n    return null;\n  }\n  const worldNumbers = getWorldNumberBuckets(props.dayData);\n  const data = [0];\n  const maxLevel = _.max(_.keys(worldNumbers).map(number => Number.parseInt(number, 10)))\n  for (let i = 1; i <= maxLevel; i++) {\n    data[i] = worldNumbers[i] || 0;\n  }\n  const options = {\n    chart: {\n      type: 'column'\n    },\n    plotOptions: {\n      column: {\n        colorByPoint: true\n      },\n      series: {\n        minPointLength: 3\n      }\n    },\n    colors: [\n      '#8B786D',\n      '#8B786D',\n      '#8B786D',\n      '#8B786D',\n      '#8B786D',\n      '#590925',\n      '#590925',\n      '#590925',\n      '#590925',\n      '#F6AA1C',\n      '#16425B',\n      '#16425B',\n      '#16425B',\n      '#16425B',\n      '#78A1BB',\n      '#DAD4EF',\n      '#DAD4EF',\n      '#DAD4EF',\n      '#DAD4EF',\n      '#9CDE9F',\n      '#9CDE9F',\n      '#9CDE9F',\n      '#9CDE9F',\n      '#002626',\n    ],\n    title: {text:\"Maximum World Reached\"},\n    credits: {\n      enabled: false\n    },\n    legend:{\n      enabled:false,\n    },\n    yAxis: {\n      title: { text: \"Number of Players\" }\n    },\n    xAxis: {\n      min: 1,\n      max: 23,\n      tickPositions: [1, 5, 9, 10, 14, 15, 19, 23],\n      labels: {\n        formatter: function() {\n          const levelDefinition = getLevelDefinition(this.value);\n          if (levelDefinition.value === 23) {\n            return \"ocean\";\n          }\n          return `${levelDefinition.toString()}`\n        }\n      },\n      crosshair: true\n    },\n    series: [{\n      name: 'WorldEntered',\n      data: data,\n    }],\n    tooltip: {\n      formatter: function() {\n        const levelDefinition = getLevelDefinition(this.x);\n        return `${levelDefinition.worldName} ${levelDefinition.toString()}<br/>${this.y} players`\n      }\n    }\n  }\n\n  const Chart = () => <div>\n    <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n    />\n  </div>\n  return <Chart />;\n}\n","import {getPlayerName} from \"./utils\";\n\n\nconst baseUrl =  (window.location.hostname === \"localhost\")\n    ? \"http://localhost:8010/proxy\"\n    : \"https://spelunky2daily.s3-us-west-2.amazonaws.com\"\nexport function fetchPath(path) {\n  return fetch(baseUrl + path);\n}\n\nexport function fetchPlayer(playerName) {\n  return fetch(\"https://tfyx29y4wl.execute-api.us-west-2.amazonaws.com/prod/player?name=\"+\n      getPlayerName(playerName))\n      .then((response) => response.json())\n      .then(data=>data?.data)\n}\n","import \"./App.css\";\nimport _ from 'lodash';\nimport React, { useEffect, useState } from \"react\";\nimport { DateTime } from \"luxon\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {TableBody} from \"@material-ui/core\";\n\nimport {getLevelDefinition, parseDate} from \"./utils\";\nimport Histogram from \"./DayHistogram\";\nimport {fetchPath} from \"./api\";\n\nfunction formatDay(date) {\n  return date.toUTC().toFormat(\"yyyy-MM-dd\");\n}\n\nfunction DayTable(props) {\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n  const classes = useStyles();\n  if (!props.dayData) {\n    return null;\n  }\n  const data = props.filterCount ? _.take(props.dayData, props.filterCount) : props.dayData;\n\n  const tableRows = _.map(data, player => {\n    const levelData = getLevelDefinition(player.level)\n    return <TableRow key={player.id}>\n        <TableCell><a href={`?player=${player.name}`}>{player.name}</a></TableCell>\n      <TableCell>{player.platform === 18 ? \"Steam\" : \"Playstation\"}</TableCell>\n      <TableCell>{levelData.toString()}</TableCell>\n      <TableCell>{player.percentile.toFixed(2)}</TableCell>\n    </TableRow>;\n  })\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Platform</TableCell>\n              <TableCell>Level</TableCell>\n              <TableCell>Percentile</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nfunction Day(props) {\n  const [filterCount, setFilterCount] = useState(100);\n  const latestDate = window.lastDayJSON;\n  function doesDayHaveData(formattedDay) {\n    return _.includes(latestDate.dates, formattedDay);\n  }\n  function getFormattedDayDelta(formattedDay, delta) {\n    const nextDate = DateTime.fromMillis(parseDate(formattedDay)).plus({days: delta});\n    const nextDay = formatDay(nextDate)\n    return doesDayHaveData(nextDay) ? nextDay : null;\n  }\n\n  function getFormattedPreviousDay(formattedDay) {\n    return getFormattedDayDelta(formattedDay, -1);\n  }\n\n  function getFormattedNextDay(formattedDay) {\n    return getFormattedDayDelta(formattedDay, 1);\n  }\n\n  function showAll() {\n    setFilterCount(null);\n  }\n\n  const [dayData, setDayData] = useState(null);\n  const formattedDay = props.day;\n\n  useEffect(() => {\n    fetchPath( \"/processeddates/\" + formattedDay + \".json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDayData(data);\n      });\n  }, [formattedDay]);\n  const previousDay = getFormattedPreviousDay(formattedDay);\n  const nextDay = getFormattedNextDay(formattedDay);\n  const previousDayElement = previousDay\n      ? <a href={\"?day=\" + previousDay}>Previous Day</a>\n      : null;\n  const nextDayElement = nextDay\n      ? <a href={\"?day=\" + nextDay}>Next Day</a>\n      : null;\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"main\">Daily Challenge for {formattedDay}</div>\n        <div className=\"subtitle\">Data Provided by {\" \"}\n          <a href=\"http://vdzserver.org/spelunky2\">http://vdzserver.org/spelunky2</a>\n        </div>\n        <nav className=\"day-nav\">\n          {previousDayElement}\n          {nextDayElement}\n          <a href=\"?path=leaderboards\">Leaderboards</a>\n        </nav>\n      </header>\n      <div className=\"histogram-wrapper\">\n        <Histogram dayData={dayData} />\n      </div>\n      <DayTable dayData={dayData} filterCount={filterCount}/>\n      {\n        filterCount\n          ? <div>Showing Top 100 players <button onClick={showAll}>Show All</button></div>\n          : null\n      }\n    </div>\n  );\n}\n\nexport default Day;\n","import \"./Player.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {TableBody} from \"@material-ui/core\";\nimport _ from 'lodash';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official'\nimport {parseDate, getPlayerName, getLevelDefinition} from \"./utils\";\nimport {fetchPath, fetchPlayer} from \"./api\";\nconst {DateTime} = require(\"luxon\");\n\nfunction Player(props) {\n  const [playerData, setPlayerData] = useState(null);\n  const [percentilesByDate, setPercentilesByDate] = useState(null);\n  const player = props.player;\n\n  useEffect(() => {\n    fetchPlayer(player)\n      .then((data) => {\n        setPlayerData(data);\n      });\n  }, [player]);\n  useEffect(()=> {\n    fetchPath(\"/percentilesByDate.json\")\n        .then(d=>d.json())\n        .then(newPercentilesByDate=> setPercentilesByDate(newPercentilesByDate))\n  },[])\n\n  if (!playerData) {\n    return null;\n  }\n\n  function createRow(label, value) {\n    return <TableRow>\n      <TableCell>{label}</TableCell>\n      <TableCell>{value}</TableCell>\n    </TableRow>;\n  }\n\n  function createDayRow(date, dayData) {\n    return <TableRow>\n      <TableCell>{date}</TableCell>\n      <TableCell>{dayData.level}</TableCell>\n      <TableCell>{dayData.score}</TableCell>\n      <TableCell>{(dayData.runframes / 60).toFixed(3)}</TableCell>\n      <TableCell>{dayData.rank}</TableCell>\n      <TableCell>{dayData.percentile.toFixed(2)}</TableCell>\n    </TableRow>;\n  }\n\n  const summaryRows = [\n    createRow(\"Best Rank\", `${playerData.rankSummary.min} (${playerData.percentileSummary.max.toFixed(2)})%`),\n    createRow(\"Median Rank\", `${playerData.rankSummary.median} (${playerData.percentileSummary.median.toFixed(2)})%`),\n  ];\n  const dayRows = _.map(playerData.scoreData, (dataDay, date) => {\n    return createDayRow(date, dataDay);\n  })\n\n  function getChartData(dataByDay, percentilesByDate) {\n    return _.map(dataByDay, (dayData, day) => {\n      return [parseDate(day), dayData.level];\n    }).reverse();\n  }\n\n  const chartData = getChartData(playerData.scoreData, percentilesByDate);\n  const p25Series = [];\n  const p50Series = [];\n  const p75Series = [];\n  const p80Series = [];\n  const p90Series = [];\n  const p95Series = [];\n  const p99Series = [];\n  _.forEach(chartData, (data) => {\n    const date = DateTime.fromMillis(data[0], {zone: 'UTC'})\n    // const date = new Date(key)\n    const dataForDate = percentilesByDate[date.toString()];\n    if (dataForDate) {\n      p25Series.push([data[0], dataForDate[\"p25\"]]);\n      p50Series.push([data[0], dataForDate[\"p50\"]]);\n      p75Series.push([data[0], dataForDate[\"p75\"]]);\n      p80Series.push([data[0], dataForDate[\"p80\"]]);\n      p90Series.push([data[0], dataForDate[\"p90\"]]);\n      p95Series.push([data[0], dataForDate[\"p95\"]]);\n      p99Series.push([data[0], dataForDate[\"p99\"]]);\n    }\n  })\n  const options = {\n    credits: {\n      enabled: false\n    },\n    chart: {\n      type: 'spline'\n    },\n    title: {\n      text: 'Depth Over Time'\n    },\n    tooltip: {\n      headerFormat: '<b>{series.name}</b><br>',\n      pointFormat: '{point.x:%m-%d}: {point.y}',\n      formatter: function() {\n        const levelDefinition = getLevelDefinition(this.y);\n        const date = Highcharts.dateFormat('%m-%d-%Y', new Date(this.x))\n        return `${date} <br/>${levelDefinition.worldName} ${levelDefinition.toString()}<br/>`\n      }\n    },\n    xAxis: {\n      type: 'datetime',\n      title: {\n        text: 'Daily'\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'Depth (floors reached)'\n      },\n      min: 1,\n      labels: {\n        formatter: function() {\n          const levelDefinition = getLevelDefinition(this.value);\n          if (levelDefinition.value === 23) {\n            return \"ocean\";\n          }\n          return `${levelDefinition.toString()}`\n        }\n      },\n\n    },\n    legend:{\n      enabled:true,\n    },\n    series: [{\n      name: player,\n      data: chartData\n    },\n    //   {\n    //   name: \"25th percentile\",\n    //   data: p25Series,\n    //   dashStyle: 'ShortDash',\n    // },\n      {\n      name: \"50th percentile\",\n      color: \"#DDDDDD\",\n      dashStyle: 'ShortDash',\n      data: p50Series,\n    },\n      // {\n    //   name: \"75th percentile\",\n    //     selected: false,\n    //     color: \"#CCFFFF\",\n    //     dashStyle: 'ShortDash',\n    //   data: p75Series,\n    // }, {\n    //   name: \"90th percentile\",\n    //     selected: false,\n    //     color: \"#CCFFCC\",\n    //   data: p90Series,\n    // }\n    // , {\n    //   name: \"95th percentile\",\n    //   data: p95Series,\n    // }, {\n    //   name: \"99th percentile\",\n    //   data: p99Series,\n    // }\n    ]\n  }\n  const Chart = () => <div>\n    <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n    />\n  </div>\n\n  return (\n    <div>\n      <div className=\"title\">{playerData.name}</div>\n      <Table>\n        <TableBody>\n          {summaryRows}\n        </TableBody>\n      </Table>\n      <Chart />\n      <Table>\n        <TableHead>\n          <TableCell>date</TableCell>\n          <TableCell>level</TableCell>\n          <TableCell>score</TableCell>\n          <TableCell>time</TableCell>\n          <TableCell>rank</TableCell>\n          <TableCell>percentile</TableCell>\n        </TableHead>\n        <TableBody>\n          {dayRows}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default Player;\n","\nimport React, { useEffect, useState } from \"react\";\nimport {fetchPath} from \"./api\";\nimport {TableBody, TableHead} from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport _ from 'lodash';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {getLevelDefinition} from \"./utils\";\n\nconst DECAY_CONST = 0.9;\nexport default function Leaderboards() {\n  const [playerData, setPlayerData] = useState(null);\n\n  useEffect(()=> {\n    fetchPath(\"/tenDayLevelScoreList.json\")\n        .then(d=>d.json())\n        .then(data => {\n          _.forEach(data, (player, i)=> {\n            const scores = [];\n            _.forEach(player.tenDayLevelsReached, (level, i)=> {\n              if (level) {\n                scores.push(level * Math.pow(DECAY_CONST, i));\n              }\n            })\n            const totalScore = _.sum(scores);\n            // append total score\n            player.totalScore = totalScore;\n          })\n          return _(data).sortBy(\"totalScore\").reverse().value();\n        })\n        .then(data => setPlayerData(data))\n  },[])\n\n  const rows = _.map (playerData, (player, index)=> {\n    const scoreDays = _.map(player.tenDayLevelsReached, (dayScore) => {\n      const s = getLevelDefinition(dayScore)\n      return s.toString()\n    })\n    return <TableRow key={player.playerName}>\n      <TableCell>\n        {index+1}\n      </TableCell>\n      <TableCell>\n        {player.playerName}\n      </TableCell>\n      <TableCell>\n        {player.totalScore.toFixed(2)}\n      </TableCell>\n      {_.map(scoreDays, (scoreDay)=> {\n        return <TableCell style={{whiteSpace: \"nowrap\"}}>\n          {scoreDay}\n        </TableCell>\n      })}\n    </TableRow>\n  });\n\n  return (<div>\n    <header>\n      Spelunky 2 Leaderboards\n      <div className=\"subtitle\">Calculated using the last 10 days. More recent days have a higher influence on total score</div>\n    </header>\n    <div style={{width: 1024}}>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Rank</TableCell>\n            <TableCell>Player</TableCell>\n            <TableCell>Total Ten Day Score</TableCell>\n            <TableCell colSpan={10}>Results</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows}\n        </TableBody>\n      </Table>\n      <footer></footer>\n    </div>\n  </div>);\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Day from \"./Day\";\nimport Player from \"./Player\";\nimport Leaderboards from \"./Leaderboards\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {fetchPath} from \"./api\";\n\n\nasync function getDateAndGo() {\n  window.lastDayJSON = await fetchPath(\"/latest-date.json\")\n      .then((response) => response.json());\n\n  const urlParams = new URLSearchParams(window.location.search);\n  let app;\n  const player = urlParams.get(\"player\");\n  const path = urlParams.get(\"path\");\n  const day = urlParams.get(\"day\") || window.lastDayJSON.date;\n  if (player) {\n    app = <Player player={player}/>;\n  } else if (path === \"leaderboards\") {\n    app = <Leaderboards />;\n  } else {\n    app = <Day day={day} />;\n  }\n\n  ReactDOM.render(\n      <React.StrictMode>{app}</React.StrictMode>,\n      document.getElementById(\"root\")\n  );\n}\ngetDateAndGo();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}